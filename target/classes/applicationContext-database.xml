<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" 
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xmlns:p="http://www.springframework.org/schema/p" 
 xmlns:context="http://www.springframework.org/schema/context" 
 xmlns:aop="http://www.springframework.org/schema/aop" 
 xmlns:tx="http://www.springframework.org/schema/tx" 
 xmlns:util="http://www.springframework.org/schema/util" 
 xmlns:mvc="http://www.springframework.org/schema/mvc"  
 xmlns:jaxws="http://cxf.apache.org/jaxws"
 xsi:schemaLocation="http://www.springframework.org/schema/beans  
 	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-3.2.xsd  
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
	http://www.springframework.org/schema/aop  
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.2.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
	http://cxf.apache.org/jaxws 
	http://cxf.apache.org/schemas/jaxws.xsd"> 
	
	<import resource="classpath:META-INF/cxf/cxf.xml"/> 
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>
	
	<bean id="propertiesLoader" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
		<property name="locations"> 
			<list>
				<!--   读取数据库配置文件 jdbc.properties  -->
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxIdle" value="10" />
		<property name="maxActive" value="100" /> 
		<property name="minEvictableIdleTimeMillis" value="3600000" />
		<property name="timeBetweenEvictionRunsMillis" value="18000000" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testOnBorrow" value="true" />
        <property name="defaultAutoCommit" value="true" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
   	 	<property name="dataSource" ref="dataSource" />
   	 	<property name="configLocation" value="classpath:mybatis-config.xml" /> 
   	 	<property name="mapperLocations"  
              value="classpath:entity/*.xml" />  
        <property name="typeAliasesPackage" value="com.ty.photography.model" /> 
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	   <property name="basePackage" value="com.ty.photography.dao" />  
	</bean> 
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/> 
	
	<aop:config>
		<aop:pointcut id="serviceOperation" 
			expression="execution(* com.ty.photography.service..*.*(..))" />
		<aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice" />
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			 <tx:method name="find*" propagation="SUPPORTS" />
			 <tx:method name="get*" propagation="SUPPORTS" />
			 <tx:method name="set*" propagation="SUPPORTS" />
			 <tx:method name="query*" propagation="SUPPORTS" />
			 <tx:method name="select*" propagation="SUPPORTS" />
			 <tx:method name="search*" propagation="SUPPORTS" /> 
			 <tx:method name="validate*" propagation="SUPPORTS" /> 
			<tx:method name="new_*" propagation="REQUIRES_NEW" isolation="READ_COMMITTED" rollback-for="java.lang.Throwable" />
			<tx:method name="*" isolation="READ_UNCOMMITTED"  propagation="REQUIRED" rollback-for="java.lang.Throwable" />
		</tx:attributes>
	</tx:advice>
	
	<context:component-scan base-package="com.ty.photography.service"/>
    <context:component-scan base-package="com.ty.photography.dao"/>
    <context:component-scan base-package="com.ty.photography.webservice"/>
</beans> 
