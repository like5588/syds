package com.ty.photography.monitor;

import java.util.List;
import java.util.Map;
import java.util.concurrent.atomic.AtomicInteger;

import com.ty.photography.model.Dictionary;
import com.ty.photography.service.IUserInfoService;

public class TelecomInfo implements Runnable{
	
	public IUserInfoService userInfoService;
	
	public TelecomInfo(IUserInfoService userInfoService){
		this.userInfoService = userInfoService;
	}
	
	public static List<Map<String,Object>> info;
	public static AtomicInteger dxUserNum = new AtomicInteger(0);
	public static AtomicInteger dxPhotosNum = new AtomicInteger(0);
	public static AtomicInteger allPhotosNum = new AtomicInteger(0);
	public static AtomicInteger allUserNum = new AtomicInteger(0);
	public static List<Dictionary> telecomArea;

	public static List<Dictionary> getTelecomArea() {
		return telecomArea;
	}

	public void setTelecomArea(List<Dictionary> telecomArea) {
		TelecomInfo.telecomArea = telecomArea;
	}

	@Override
	public void run() {
		while (true) {
			try {
				process();
			} catch (Exception e) {
				System.err.println(" get telecomInfo Runing Exception:" 
						+ e.getMessage());
			}
			try {
				Thread.sleep(1800000);	//30分钟
			} catch (InterruptedException e) {
				System.err.println(e.getMessage());
			}
		}
	}
	private void process() throws Exception {
		info = userInfoService.allTelecomInfo();
		dxUserNum = new AtomicInteger(userInfoService.allPerson("5"));
		dxPhotosNum = new AtomicInteger(userInfoService.allPhoto("5"));  
		allPhotosNum = new AtomicInteger(userInfoService.allPhoto("9"));  
		allUserNum = new AtomicInteger(userInfoService.allPerson("9"));
	}

}
